/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

parcel Clownfish;

/** Immutable double precision floating point number.
 */
public final class Clownfish::Float {

    double value;

    /**
     * @param value Initial value.
     */
    public inert Float*
    init(Float* self, double value);

    public inert Float*
    new(double value);

    void*
    To_Host(Float *self);

    public double
    Get_Value(Float *self);

    public int64_t
    To_I64(Float *self);

    public incremented String*
    To_String(Float *self);

    public bool
    Equals(Float *self, Obj *other);

    public int32_t
    Compare_To(Float *self, Obj *other);

    public incremented Float*
    Clone(Float *self);
}

/**
 * Immutable 64-bit signed integer.
 */
public final class Clownfish::Integer nickname Int {

    int64_t value;

    /**
     * @param value Initial value.
     */
    public inert Integer*
    init(Integer* self, int64_t value);

    public inert Integer*
    new(int64_t value);

    void*
    To_Host(Integer *self);

    public int64_t
    Get_Value(Integer *self);

    public double
    To_F64(Integer *self);

    public incremented String*
    To_String(Integer *self);

    public bool
    Equals(Integer *self, Obj *other);

    public int32_t
    Compare_To(Integer *self, Obj *other);

    public incremented Integer*
    Clone(Integer *self);
}


